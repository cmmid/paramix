% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aggregate.R
\name{alembic}
\alias{alembic}
\title{Create an Model Outcome Re-mapping}
\usage{
alembic(
  f_param,
  densities,
  model_partition,
  new_partition,
  ...,
  open_partition = c(lower = FALSE, upper = FALSE)
)
}
\arguments{
\item{f_param}{a function, \code{f(x, ...)} which operates on the feature
(e.g. age), and optionally additional arguments, and yields the parameter
value.}

\item{densities}{a \code{data.frame} with numeric columns \code{from} and \code{weight}. The
\code{weight} column must be positive, but need not be normalized. Alternatively:
a density function}

\item{model_partition}{a numeric vector of cut points, which define the partition}

\item{new_partition}{the new partition of the underlying feature}

\item{...}{optional arguments to \code{f_param}}
}
\value{
a \code{data.frame} which maps fractions of the original model partitions
to the desired partitions, according to underlying relative outcome rates and
densities
}
\description{
Create an Model Outcome Re-mapping
}
\examples{
ifr_levin <- function(age_in_years) {
  scaled <- exp(-7.56 + 0.121 * age_in_years)
  scaled / (100 + scaled)
}
age_limits <- c(seq(0, 69, by = 5), 70, 80, 100)
age_pyramid <- data.frame(
  from = 0:99, weight = ifelse(0:99 < 65, 1, .99^(0:99-64))
) # flat age distribution, then 1\% annual deaths
ifr_alembic <- alembic(ifr_levin, age_pyramid, age_limits, 0:100)

}
